if(NOT DEFINED SUNDIALS_DIR)
  set(SUNDIALS_DIR ${AUTOBUILD_INSTALL_PATH} CACHE PATH "path to SUNDIALS")
endif()

SHOW_VARIABLE(SUNDIALS_DIR PATH
  "SUNDIALS library directory" "${SUNDIALS_DIR}")

  set(SUNDIALS_FIND_QUIETLY ON)

  set(SUNDIALS_REQUIRED CVODE ARKODE SUNMATRIXDENSE SUNLINSOLDENSE)

  if (ENABLE_KLU)
    list(APPEND SUNDIALS_REQUIRED sunmatrixsparse sunlinsolklu)
  endif(ENABLE_KLU)

find_package(SUNDIALS REQUIRED COMPONENTS ${SUNDIALS_REQUIRED})

  if(SUNDIALS_FOUND)
    list(INSERT external_library_list 0 ${SUNDIALS_LIBRARIES})
  OPTION(FORCE_SUNDIALS_REBUILD "force rebuild of sundials" OFF)
    IF (AUTOBUILD_SUNDIALS)

        IF(FORCE_SUNDIALS_REBUILD)
            include(buildSundials)
            if (MSVC)
                build_sundials_msvc()
            elseif(MINGW)
            build_sundials_mingw()
        else()
            build_sundials()
        endif()
            set(FORCE_SUNDIALS_REBUILD OFF CACHE BOOL "force rebuild of sundials" FORCE)
        ENDIF(FORCE_SUNDIALS_REBUILD)
    ELSE (AUTOBUILD_SUNDIALS)
       IF(FORCE_SUNDIALS_REBUILD)
            include(buildSundials)
            if (MSVC)
                build_sundials_msvc()
            elseif(MINGW)
            build_sundials_mingw()
        else()
            build_sundials()
        endif()
            set(SUNDIALS_FOUND OFF CACHE BOOL "sundials not found" FORCE)
            set(SUNDIALS_LIBRARIES NOT_FOUND FORCE)
            set(FORCE_SUNDIALS_REBUILD OFF CACHE BOOL "force rebuild of sundials" FORCE)
            set(SUNDIALS_DIR ${PROJECT_BINARY_DIR}/libs)
            find_package(SUNDIALS REQUIRED COMPONENTS ${SUNDIALS_REQUIRED})
        ENDIF(FORCE_SUNDIALS_REBUILD)
    ENDIF(AUTOBUILD_SUNDIALS)
  else(SUNDIALS_FOUND)
    OPTION(AUTOBUILD_SUNDIALS "enable Sundials to automatically download and build" ON)
    IF (AUTOBUILD_SUNDIALS)
      include(buildSundials)
      if (MSVC)
            build_sundials_msvc()
        elseif(MINGW)
            build_sundials_mingw()
        else()
            build_sundials()
        endif()
      set(SUNDIALS_DIR ${PROJECT_BINARY_DIR}/libs)
      find_package(SUNDIALS REQUIRED COMPONENTS ${SUNDIALS_REQUIRED})
    ENDIF(AUTOBUILD_SUNDIALS)
  if (SUNDIALS_FOUND)
    list(INSERT external_library_list 0 ${SUNDIALS_LIBRARIES})
  else (SUNDIALS_FOUND)
    message( FATAL_ERROR "sundials not found - unable to continue")
    message( "Double check spelling specified libraries (search is case sensitive)")
  endif(SUNDIALS_FOUND)
  endif(SUNDIALS_FOUND)
