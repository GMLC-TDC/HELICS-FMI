if(NOT DEFINED SUNDIALS_DIR)
  set(SUNDIALS_DIR ${PROJECT_BINARY_DIR}/libs CACHE PATH "path to SUNDIALS")
endif()

SHOW_VARIABLE(SUNDIALS_DIR PATH
  "SUNDIALS library directory" "${SUNDIALS_DIR}")
  
  set(SUNDIALS_FIND_QUIETLY ON)
  
  set(SUNDIALS_REQUIRED CVODE SUNMATRIXDENSE SUNLINSOLDENSE)
  
  if (KLU_ENABLE)
  list(APPEND SUNDIALS_REQUIRED sunmatrixsparse sunlinsolklu)
  endif(KLU_ENABLE)
  
find_package(SUNDIALS REQUIRED COMPONENTS ${SUNDIALS_REQUIRED})

  if(SUNDIALS_FOUND) 
	list(INSERT external_library_list 0 ${SUNDIALS_LIBRARIES})
  OPTION(FORCE_SUNDIALS_REBUILD "force rebuild of sundials" OFF)
	IF (AUTOBUILD_SUNDIALS)
		
		IF(FORCE_SUNDIALS_REBUILD)
			include(buildSundials)
			build_sundials()
			set(FORCE_SUNDIALS_REBUILD OFF CACHE BOOL "force rebuild of sundials" FORCE)
		ENDIF(FORCE_SUNDIALS_REBUILD)
	ELSE (AUTOBUILD_SUNDIALS)
	   IF(FORCE_SUNDIALS_REBUILD)
			include(buildSundials)
			build_sundials()
			set(SUNDIALS_FOUND OFF CACHE BOOL "sundials not found" FORCE)
			set(SUNDIALS_LIBRARIES NOT_FOUND CACHE FORCE)
			set(FORCE_SUNDIALS_REBUILD OFF CACHE BOOL "force rebuild of sundials" FORCE)
			set(SUNDIALS_DIR ${PROJECT_BINARY_DIR}/libs)
			find_package(SUNDIALS REQUIRED COMPONENTS ${SUNDIALS_REQUIRED})
		ENDIF(FORCE_SUNDIALS_REBUILD)
	ENDIF(AUTOBUILD_SUNDIALS)
  else(SUNDIALS_FOUND)
    OPTION(AUTOBUILD_SUNDIALS "enable Sundials to automatically download and build" ON)
    IF (AUTOBUILD_SUNDIALS)
      include(buildSundials)
      build_sundials()
      set(SUNDIALS_DIR ${PROJECT_BINARY_DIR}/libs)
      find_package(SUNDIALS REQUIRED COMPONENTS ${SUNDIALS_REQUIRED})
    ENDIF(AUTOBUILD_SUNDIALS)
  if (SUNDIALS_FOUND)
    list(INSERT external_library_list 0 ${SUNDIALS_LIBRARIES})
  else (SUNDIALS_FOUND)
	message( FATAL_ERROR "sundials not found - unable to continue")
	message( "Double check spelling specified libraries (search is case sensitive)")
  endif(SUNDIALS_FOUND)
  endif(SUNDIALS_FOUND)

